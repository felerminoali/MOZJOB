@model PortalEmprego_Wth_MemberShip_And_mvc5.Models.Anuncio

@{
    ViewBag.Title = "Create";
    //Layout = "~/Views/Shared/_LayoutLogged.cshtml";
}



@*==========================header===========================================*@

<!-- Header -->
<div class="header container-title">
    <h6 class="page-title">
        <span class="glyphicon glyphicon-pencil"></span>
        Gestão de Anúncio: Adicionar Novo Anúncio
    </h6>
</div>



@*==========================Fim header===========================================*@

@*<form method="post" name="adminForm" id="item-form" class="form-validate">*@
@using (@Html.BeginForm(FormMethod.Post))
{

    <!-- Subheader -->
    <a class="btn btn-subhead" data-toggle="collapse" data-target=".subhead-collapse">Toolbar		<i class="icon-wrench"></i></a>
    <div class="subhead-collapse collapses">
        <div class="subhead">
            <div class="container-fluid">
                <div id="container-collapse" class="container-collapse"></div>
                <div class="row-fluid">
                    <div class="span12">
                        <div class="btn-toolbar" id="toolbar">

                            <div class="btn-wrapper" id="toolbar-save">
                                <button class="btn btn-small btn-success" name="comand" value="SaveClose">
                                    <span class="glyphicon glyphicon-ok"></span>
                                    Salvar &amp; Fechar
                                </button>
                            </div>
                            <div class="btn-wrapper" id="toolbar-save-new">
                                <button class="btn btn-small" name="comand" value="SaveNew">
                                    <span class="glyphicon glyphicon-plus"></span>
                                    Salvar &amp; Novo
                                </button>
                            </div>
                            <div class="btn-wrapper" id="toolbar-cancel">
                                <a class="btn btn-small" href="@Url.Action("Index", "Anuncio")">
                                    <span class="glyphicon glyphicon-remove-sign"></span>
                                    Cancelar
                                </a>

                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="container-fluid container-main">




        @Html.AntiForgeryToken()


        @*@Html.ValidationSummaryBootstrap()*@


        @Html.ValidationSummary(false, "Por favor, rectifique os campos abaixo, antes de submeter:")



        <div class="form-inline form-inline-header">


            @* Html helper*@
            <div class="control-group">
                <div class="control-label">

                    @*@Html.LabelForCustom(model => model.title, null, @<span class="star">&#160;*</span>, new { @class = "hasTooltip" })*@
                    @Html.LabelFor(model => model.title, new { @class = "hasTooltip" })
                    @Html.ValidationMessageFor(model => model.title, "*")
                </div>
                <div class="controls">

                    @Html.TextBoxFor(model => model.title, new { @class = "input-xxlarge input-large-text", size = "40" })
                </div>
            </div>
        </div>

        <div class="form-horizontal">

            <ul class="nav nav-tabs" id="myTabTabs"></ul>
            <div class="tab-content" id="myTabContent">

                <div id="general" class="tab-pane active">
                    <div class="row-fluid">
                        <div class="span9">
                            <fieldset class="adminform">
                                @Html.ValidationMessageFor(model => model.Conteudo, "Preencha este Campo")
                                <div class="editor">
                                    @Html.TextAreaFor(model => model.Conteudo, new { @class = "mce_editable", style = "width: 100%; height: 500px;" })
                                </div>
                            </fieldset>
                        </div>
                        <div class="span3">
                            <fieldset class="form-vertical">

                                @*<div class="control-group ">
                                        <div class="control-label">

                                            @Html.LabelFor(model => model.Codigo, new { @class="hasTooltip"})
                                        </div>
                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.Codigo, new { @class="span12", size = "45",  @readonly = "readonly"})

                                        </div>
                                    </div>*@


                                @*<div class="control-group">
                                        <div class="control-label">
                                            @Html.LabelFor(model => model.isFullTime, new { @class = "hasTooltip" })

                                            @Html.ValidationMessageFor(model => model.isFullTime, "*")
                                        </div>
                                        <div class="controls">
                                            <fieldset class="radio btn-group btn-group-yesno">
                                                <label for="isFullTime1">

                                                    @Html.RadioButtonFor(model => model.isFullTime, true, new { @checked = "checked", id = "isFullTime1" })
                                                    Full-time
                                                </label>
                                                <label for="isFullTime2">

                                                    @Html.RadioButtonFor(model => model.isFullTime, false, new { id = "isFullTime2" })
                                                    Part-time
                                                </label>
                                            </fieldset>
                                        </div>
                                    </div>*@

                                <div class="control-group ">
                                    <div class="control-label">
                                        @Html.LabelForCustom(model => model.Status, null, @<span class="star">&#160;*</span>, new { @class = "hasTooltip" })
                                    </div>
                                    <div class="controls">

                                        @Html.DropDownList("Status", "-- Seleccione um --")

                                    </div>
                                </div>

                                <div class="control-group ">
                                    <div class="control-label">

                                        @Html.LabelForCustom(model => model.language, null, @<span class="star">&#160;*</span>, new { @class = "hasTooltip" })

                                    </div>
                                    <div class="controls">
                                        @Html.DropDownList("Lang", "-- Seleccione um --")
                                    </div>
                                </div>

                                <div class="control-group ">
                                    <div class="control-label">

                                        @Html.LabelForCustom(model => model.Location, null, @<span class="star">&#160;*</span>, new { @class = "hasTooltip" })
                                    </div>
                                    <div class="controls">
                                        @Html.DropDownList("Location", "-- Seleccione um --")
                                    </div>
                                </div>


                                <div class="control-group ">
                                    <div class="control-label">

                                        @Html.LabelForCustom(model => model.category, null, @<span class="star">&#160;*</span>, new { @class = "hasTooltip" })
                                    </div>
                                    <div class="controls">
                                        @Html.DropDownList("parentCategory", null, "-- Seleccione um --", new { @class = "CssCategory" })
                                        @Html.DropDownList("category", null, "-- Seleccione um --", new { @class = "CssSubcategory" })
                                    </div>
                                </div>

                                @*<div class="control-group ">
                                        <div class="control-label">

                                            @Html.LabelForCustom(model => model.category, null, @<span class="star">&#160;*</span>, new { @class = "hasTooltip" })
                                        </div>
                                        <div class="controls">
                                            @Html.DropDownList("category", null, "-- Seleccione um --", new { @class = "CssSubcategory" })
                                        </div>
                                    </div>*@



                                <div class="control-group ">
                                    <div class="control-label">

                                        @Html.LabelForCustom(model => model.tipoAnuncio, null, @<span class="star">&#160;*</span>, new { @class = "hasTooltip" })
                                    </div>
                                    <div class="controls">
                                        @Html.DropDownList("tipoAnuncio", "-- Seleccione um --")
                                    </div>
                                </div>



                            </fieldset>
                        </div>
                    </div>

                </div>

                <div id="publishing" class="tab-pane">
                    <div class="row-fluid form-horizontal-desktop">
                        <div class="span6">


                            <div class="control-group ">
                                <div class="control-label">
                                    @Html.LabelFor(model => model.startPub, new { @class = "hasTooltip" })
                                </div>

                                <div class="controls">
                                    <div class="input-append date datepicker" data-date-format="dd/mm/yyyy">
                                        @Html.TextBoxFor(model => model.startPub, new { @class = "span12", size = "10" })
                                        <span class="add-on"><i class="glyphicon glyphicon-calendar"></i></span>
                                    </div>
                                </div>

                            </div>

                            <div class="control-group ">
                                <div class="control-label">
                                    @Html.LabelFor(model => model.finishPub, new { @class = "hasTooltip" })
                                </div>
                                <div class="controls">
                                    <div class="input-append date datepicker" data-date-format="dd/mm/yyyy">
                                        @Html.TextBoxFor(model => model.finishPub, new { @class = "span12", size = "10" })
                                        <span class="add-on"><i class="glyphicon glyphicon-calendar"></i></span>
                                    </div>
                                </div>
                            </div>


                            <div class="control-group ">
                                <div class="control-label">
                                    @Html.LabelFor(model => model.created, new { @class = "hasTooltip" })
                                </div>
                                <div class="controls">
                                    <div class="input-append date datepicker" data-date-format="dd/mm/yyyy">
                                        @Html.TextBoxFor(model => model.created, new { @class = "span12", size = "10" })
                                        <span class="add-on"><i class="glyphicon glyphicon-calendar"></i></span>
                                    </div>
                                </div>
                            </div>


                            <div class="control-group ">

                                @* o usuario cadastrado*@
                                @Html.HiddenFor(model => model.created_by)


                            </div>

                            @*<div class="control-group ">
                                    <div class="control-label">
                                        <label id="jform_modified-lbl" for="jform_modified" class="hasTooltip" title="&lt;strong&gt;Modified Date&lt;/strong&gt;&lt;br /&gt;The date and time that the article was last modified.">
                                            Modified Date
                                        </label>
                                    </div>
                                    <div class="controls"><div><input type="text" title="" name="jform[modified]" id="jform_modified" value="" size="22" maxlength="45" class="readonly hasTooltip" readonly="readonly" /><button type="button" class="btn" id="jform_modified_img" style="display:none;"><i class="icon-calendar"></i></button></div></div>
                                </div>*@


                            @*<div class="control-group ">
                                    <div class="control-label">
                                        <label id="jform_modified_by-lbl" for="jform_modified_by" class="">
                                            Modified by
                                        </label>
                                    </div>
                                    <div class="controls">
                                        <div class="input-append">
                                            <input type="text" id="jform_modified_by" value="Select a User" readonly class="readonly" />
                                        </div>
                                        <input type="hidden" id="jform_modified_by_id" name="jform[modified_by]" value="" />
                                    </div>
                                </div>*@
                        </div>
                    </div>
                </div>

                <div id="images" class="tab-pane">

                </div>


                <div id="attrib-basic" class="tab-pane">


                    <div class="control-group ">
                        <div class="control-label">
                            <label id="jform_attribs_show_title-lbl" for="jform_attribs_show_title" class="hasTooltip" title="&lt;strong&gt;Show Title&lt;/strong&gt;&lt;br /&gt;If set to Show, the article title is shown.">
                                Show Title
                            </label>
                        </div>
                        <div class="controls">
                            <select id="jform_attribs_show_title" name="jform[attribs][show_title]" class="chzn-color">
                                <option value="" selected="selected">Use Global</option>
                                <option value="1">Show</option>
                                <option value="0">Hide</option>
                            </select>
                        </div>
                    </div>

                    <div class="control-group ">
                        <div class="control-label"><span class="spacer"><span class="before"></span><span><hr /></span><span class="after"></span></span></div>
                        <div class="controls"> </div>
                    </div>

                </div>

            </div>

        </div>







    </div>

}
@section Scripts {

    @Styles.Render("~/Content/bootstrap/datepicker")
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/datepicker")
    @Scripts.Render("//tinymce.cachefly.net/4.0/tinymce.min.js")


    <script>
        tinymce.init({

            // General
            directionality: "ltr",
            language: "en",
            mode: "specific_textareas",
            autosave_restore_when_empty: false,
            skin: "lightgray",
            theme: "modern",
            schema: "html5",
            selector: "textarea.mce_editable",
            // Cleanup/Output
            inline_styles: true,
            gecko_spellcheck: true,
            entity_encoding: "raw",
            valid_elements: "",
            extended_valid_elements: "hr[id|title|alt|class|width|size|noshade]",
            force_br_newlines: false, force_p_newlines: true, forced_root_block: 'p',
            toolbar_items_size: "small",
            invalid_elements: "script,applet,iframe",
            // Plugins
            plugins: "table link image code hr charmap autolink lists importcss",
            // Toolbar
            toolbar1: "bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | formatselect | bullist numlist",
            toolbar2: "outdent indent | undo redo | link unlink anchor image code | hr table | subscript superscript | charmap",
            removed_menuitems: "newdocument",
            // URL
            relative_urls: true,
            remove_script_host: false,
            //document_base_url : "http://www.ae.lpsafety.org/",
            // Layout
            //content_css : "http://www.ae.lpsafety.org/templates/system/css/editor.css",
            //importcss_append: true,
            // Advanced Options
            resize: "both",
            height: "550",
            width: "",
        });
    </script>

    <script>
        /// yes/no
        $(document).ready(function () {
            $('*[rel=tooltip]').tooltip()

            // Turn radios into btn-group
            $('.radio.btn-group label').addClass('btn');
            $(".btn-group label:not(.active)").click(function () {
                var label = $(this);
                var input = $('#' + label.attr('for'));

                if (!input.prop('checked')) {
                    label.closest('.btn-group').find("label").removeClass('active btn-success btn-danger btn-primary');
                    if (input.val() == '') {
                        label.addClass('active btn-primary');
                    } else if (input.val() == 0) {
                        label.addClass('active btn-danger');
                    } else {
                        label.addClass('active btn-success');

                    }
                    input.prop('checked', true);
                }
            });
            $(".btn-group input[checked=checked]").each(function () {
                if ($(this).val() == '') {
                    $("label[for=" + $(this).attr('id') + "]").addClass('active btn-primary');
                } else if ($(this).val() == 0) {
                    $("label[for=" + $(this).attr('id') + "]").addClass('active btn-danger');
                } else {
                    $("label[for=" + $(this).attr('id') + "]").addClass('active btn-success');
                }
            });
        })

    </script>


    <script>

        // para tab menu

        (function ($) {
            $('#myTab a').click(function (e) {
                e.preventDefault();
                $(this).tab('show');
            });
        })(jQuery);

        (function ($) {
            $(document).ready(function () {
                // Handler for .ready() called.
                var tab = $('<li class=" active"><a href="#general" data-toggle="tab">Conteúdo</a></li>');
                $('#myTabTabs').append(tab);
            });
        })(jQuery);


        (function ($) {
            $(document).ready(function () {
                // Handler for .ready() called.
                var tab = $('<li class=""><a href="#publishing" data-toggle="tab">Publicação</a></li>');
                $('#myTabTabs').append(tab);
            });
        })(jQuery);

        (function ($) {
            $(document).ready(function () {
                // Handler for .ready() called.
                var tab = $('<li class=""><a href="#images" data-toggle="tab">Imagens and links</a></li>');
                $('#myTabTabs').append(tab);
            });
        })(jQuery);

        (function ($) {
            $(document).ready(function () {
                // Handler for .ready() called.
                var tab = $('<li class=""><a href="#attrib-basic" data-toggle="tab">Opções</a></li>');
                $('#myTabTabs').append(tab);
            });
        })(jQuery);



    </script>

    @* Para fixar o toolbar*@
    <script>
        (function ($) {
            // fix sub nav on scroll
            var $win = $(window)
                , $nav = $('.subhead')
                , navTop = $('.subhead').length && $('.subhead').offset().top - 40, isFixed = 0


            processScroll()

            // hack sad times - holdover until rewrite for 2.1
            $nav.on('click', function () {
                if (!isFixed) {
                    setTimeout(function () {
                        $win.scrollTop($win.scrollTop() - 47)
                    }, 10)
                }
            })

            $win.on('scroll', processScroll)

            function processScroll() {
                var i, scrollTop = $win.scrollTop()
                if (scrollTop >= navTop && !isFixed) {
                    isFixed = 1
                    $nav.addClass('subhead-fixed')
                } else if (scrollTop <= navTop && isFixed) {
                    isFixed = 0
                    $nav.removeClass('subhead-fixed')
                }
            }
        })(jQuery);
    </script>

    <script>
        // Date picker
        $(function () {

            var date = new Date();
            date.setDate(date.getDate());

            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                startDate: date,
                autoclose: true,
                language: "pt"
            });




        })
    </script>


    <script type="text/javascript">

        $(document).ready(function () {

            if ($('.CssCategory').val() == "") {
                $('.CssSubcategory').attr("disabled", "disabled");
            }

            $('.CssCategory').change(function () {
                if ($(this).val() != "") {

                    $('.CssSubcategory').removeAttr("disabled");
                }

                if ($(this).val() == "") {
                    $('.CssSubcategory').html("<option>-- Seleccione um --</option>");
                    $('.CssSubcategory').attr("disabled", "disabled");

                    return false;
                }

                var categoryId = $(this).val();
                var URL = '@Url.Action("GetSubCategory")' + '?CategoryId=' + categoryId;

                $.getJSON(URL, function (data) {
                    $('.CssSubcategory').html(data);
                });
            });
        });
    </script>
}
